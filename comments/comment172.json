{"comment_text": "Smalltalk has always had lambdas in the form of block objects. It uses them everywhere and for everything, even implementing control flow constructs like if&#x2F;then&#x2F;else and while. It also uses them to implement Lisp-style higher-order iterators like mapcar (collect:), reduce (inject:into:), and remove-if-not (select:), which though possible in JavaScript (see Prototype.js), is generally uncommon because JavaScript&#x27;s lambda syntax has historically been the most verbose of any dynamic language.<p>Anyone who claims lambdas are somehow new to or incompatible with OOP clearly doesn&#x27;t understand OOP, since lambdas have been an integral part of the most influential pure OO language (Smalltalk) for 40 years.", "author": "uname-s", "title": null, "url": null, "timestamp": 1431287633, "created_at": "2015-05-10T19:53:53.000Z", "comment_id": "9521101", "parent_id": 9520914, "story_title": "Introduction to Object-Oriented JavaScript", "story_id": 9519904, "story_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript", "points": null}
{"comment_text": "I&#x27;ve also seen very simple object systems built purely using closures in Lisp. I can&#x27;t remember where I&#x27;ve seen it, but it usually involves the bank account example. Since no other Lisp features were involved,until you start glossing over with macros, this could be replicated in JS. It&#x27;d look strange but it&#x27;s certainly possible, e.g:<p><pre><code>  var savings = account(200);\n\n  savings(&#x27;deposit&#x27;)(200);\n  console.log(savings(&#x27;amount&#x27;)); &#x2F;&#x2F; should print 400\n\n  savings(&#x27;withdraw&#x27;)(200);\n  console.log(savings(&#x27;amount&#x27;)); &#x2F;&#x2F; should print 200\n</code></pre>\nIf you can build an OO system in terms of lambdas and closures, does it mean the two are incompatible? I don&#x27;t think so.", "author": "jwdunne", "title": null, "url": null, "timestamp": 1431288692, "created_at": "2015-05-10T20:11:32.000Z", "comment_id": "9521142", "parent_id": 9521101, "story_title": "Introduction to Object-Oriented JavaScript", "story_id": 9519904, "story_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript", "points": null}
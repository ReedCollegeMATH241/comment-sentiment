{"comment_text": "You&#x27;re not supposed to &quot;flow&quot; through multiple levels of abstraction in your head. That is the fundamental problem, and why we so often think that it&#x27;s okay to have large functions (you know, to &#x27;keep it all in our heads&#x27;, or whatever reason is most often touted).<p>Not only that, but as the OP mentioned that it doesn&#x27;t work if the methods&#x2F;functions have side-effects, then we&#x27;re building up opinions on a sloppy and fundamentally broken house of cards.<p>First off, your methods should not be having side-effects that are not obvious from the purpose of the method. And then secondly, back to my original point about not having to flow through the code. In light of that, a function should do one thing, and that&#x27;s it. And when it does so, the method name clearly states what it does. After you put those two together, you simply &quot;assume&quot; that method does what you expect it to, and &quot;flow&quot; through the logic at a higher level.<p>I&#x27;m not going to go down into some silly &quot;read_input_data&quot; method while &quot;flowing&quot; through the high-level code, because I know what it is supposed to do. And by extension, at some point I will review it in its singular&#x2F;atomic entirety, or would have already done so. Either read_input_data returns the data, or it loads it up into a instance-variable.", "author": "zo1", "title": null, "url": null, "timestamp": 1431278579, "created_at": "2015-05-10T17:22:59.000Z", "comment_id": "9520583", "parent_id": 9518500, "story_title": "Code Review Best Practices", "story_id": 9517892, "story_url": "http://kevinlondon.com/2015/05/05/code-review-best-practices.html", "points": null}
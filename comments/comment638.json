{"comment_text": "This is just in time. I just read a chapter in a JavaScript book about OO programming in JS and finished the chapter very confused. It demonstrated about 12 different patterns people have used for creating &#x27;classes&#x27; and &#x27;subclassing&#x27; them, each with a list of advantages and disadvantages.<p>Eg there&#x27;s the &#x27;parasitic instantiation&#x27; and then there&#x27;s the &#x27;Constructor pattern&#x27; and then there&#x27;s the &#x27;Parasitic Constructor&#x27;, and there&#x27;s like 3 other patterns that have their own permutations. Coming from Python and then Java, where classes just work...it&#x27;s kind of annoying.<p>[edit]\nI was being a bit hyperbolic, the book discussed 6 ways of inheritance in JS, those being (1) Prototype Chaining (2) Constructor Stealing (3) Combination Inheritance &lt;- most popular one according to the book (4) Prototypal Inheritance (5) Parasitic Inheritance (6) Parasitic Combination Inheritance &lt;- pattern that is generally the best according to the book", "author": "kremlin", "title": null, "url": null, "timestamp": 1431277620, "created_at": "2015-05-10T17:07:00.000Z", "comment_id": "9520527", "parent_id": 9519904, "story_title": "Introduction to Object-Oriented JavaScript", "story_id": 9519904, "story_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript", "points": null}